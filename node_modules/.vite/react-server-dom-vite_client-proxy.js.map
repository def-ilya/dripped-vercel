{
  "version": 3,
  "sources": ["../@shopify/hydrogen/vendor/react-server-dom-vite/esm/react-server-dom-vite-client-proxy.js"],
  "sourcesContent": ["/**\n * @license React\n * react-server-dom-vite-client-proxy.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {createElement} from 'react';\n\n// eslint-disable-next-line no-unused-vars\n\n/*global globalThis*/\n// This is a store of components discovered during RSC\n// to load them later when consuming the response in SSR.\nglobalThis.__COMPONENT_INDEX = {};\n\nfunction isReactComponent(component, name) {\n  if (!component) return false;\n  return (\n    (typeof component === 'function' && /^[A-Z]/.test(name)) ||\n    typeof component.render === 'function' ||\n    component.$$typeof === Symbol.for('react.element')\n  );\n} // A ClientProxy behaves as a module reference for the Flight\n// runtime (RSC) and as a real component for the Fizz runtime (SSR).\n// Note that this is not used in browser environments.\n\nfunction wrapInClientProxy(_ref) {\n  var id = _ref.id,\n    name = _ref.name,\n    named = _ref.named,\n    component = _ref.component;\n\n  if (!isReactComponent(component, name)) {\n    // This is not a React component, do not wrap it.\n    return component;\n  }\n\n  var render = function (props) {\n    return createElement(component, props);\n  };\n\n  Object.defineProperty(render, 'name', {\n    value: name,\n  });\n\n  {\n    render.displayName = name;\n  } // Fizz runtime accesses the `render` method directly when encountering a forward_ref\n\n  var componentRef = Object.create(null);\n  componentRef.$$typeof = Symbol.for('react.forward_ref');\n  componentRef.render = render; // Flight runtime will check this custom typeof to decide wether this is a module ref\n\n  var moduleRef = Object.create(null);\n  moduleRef.$$typeof_rsc = Symbol.for('react.module.reference');\n  moduleRef.filepath = id;\n  moduleRef.name = named ? name : 'default'; // Store component in a global index during RSC to use them later in SSR\n\n  globalThis.__COMPONENT_INDEX[id] = Object.defineProperty(\n    globalThis.__COMPONENT_INDEX[id] || Object.create(null),\n    moduleRef.name,\n    {\n      value: component,\n      writable: true,\n    }\n  );\n  return new Proxy(componentRef, {\n    get: function (target, prop) {\n      return (\n        // 1. Let React access the element/ref and type in SSR\n        target[prop] || // 2. Check module properties for RSC requests\n        moduleRef[prop] || // 3. Fallback to custom component properties such as `ImageComponent.Fragment`\n        component[prop]\n      );\n    },\n  });\n}\n\nexport {wrapInClientProxy};\n"],
  "mappings": ";;;;;;AAUA,mBAA4B;AAV5B,AAiBA,WAAW,oBAAoB;AAE/B,0BAA0B,WAAW,MAAM;AACzC,MAAI,CAAC;AAAW,WAAO;AACvB,SACG,OAAO,cAAc,cAAc,SAAS,KAAK,SAClD,OAAO,UAAU,WAAW,cAC5B,UAAU,aAAa,OAAO,IAAI;AAAA;AAMtC,2BAA2B,MAAM;AAC/B,MAAI,KAAK,KAAK,IACZ,OAAO,KAAK,MACZ,QAAQ,KAAK,OACb,YAAY,KAAK;AAEnB,MAAI,CAAC,iBAAiB,WAAW,OAAO;AAEtC,WAAO;AAAA;AAGT,MAAI,SAAS,SAAU,OAAO;AAC5B,WAAO,gCAAc,WAAW;AAAA;AAGlC,SAAO,eAAe,QAAQ,QAAQ;AAAA,IACpC,OAAO;AAAA;AAGT;AACE,WAAO,cAAc;AAAA;AAGvB,MAAI,eAAe,uBAAO,OAAO;AACjC,eAAa,WAAW,OAAO,IAAI;AACnC,eAAa,SAAS;AAEtB,MAAI,YAAY,uBAAO,OAAO;AAC9B,YAAU,eAAe,OAAO,IAAI;AACpC,YAAU,WAAW;AACrB,YAAU,OAAO,QAAQ,OAAO;AAEhC,aAAW,kBAAkB,MAAM,OAAO,eACxC,WAAW,kBAAkB,OAAO,uBAAO,OAAO,OAClD,UAAU,MACV;AAAA,IACE,OAAO;AAAA,IACP,UAAU;AAAA;AAGd,SAAO,IAAI,MAAM,cAAc;AAAA,IAC7B,KAAK,SAAU,QAAQ,MAAM;AAC3B,aAEE,OAAO,SACP,UAAU,SACV,UAAU;AAAA;AAAA;AAAA;",
  "names": []
}
